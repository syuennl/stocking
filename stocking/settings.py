"""
Django settings for stocking project.

Generated by 'django-admin startproject' using Django 5.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-=8%szj^&039=%u9kkyft=h95_-eg)m3_&ierzz77u2_@m@#=t='

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'home.apps.HomeConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

INTERNAL_IPS = [
    # ...
    "127.0.0.1",
    # ...
] # restrict visibility of certain features/debug tools to specific internal/development IP addresses oni (eg. debug toolbar)

ROOT_URLCONF = 'stocking.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / 'templates'
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'stocking.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# Django will look for static files (eg. styles.css) and serve them under this path
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = '/static/' 

MEDIA_URL = 'images/' # URL path to serve media files

STATICFILES_DIRS = [
    BASE_DIR / 'static',
]

# default: looks for static files in each app's static/ directory
# STATICFILES_DIRS:  define additional locations (like BASE_DIR / 'static') where Django should also look for static files

# STATIC_ROOT =
# During deployment, run python manage.py collectstatic -> collects all static files frm apps, place them in a single directory specified by STATIC_ROOT
# This directory is then served by ur web server (e.g. Nginx).

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
# Purpose: defines default type of primary key field for models tht don't explicitly specify one
# Explanation: default, Django use AutoField (int field tht auto-increments) for primary keys
# this setting chgs default to BigAutoField, a 64-bit int, allowing a larger range of values

CORS_ALLOW_ALL_ORIGINS = True
# enables Cross-Origin Resource Sharing (CORS) for all domains.
# restricts web pgs frm making requests to diff domain than the one tht served the web pg
# better to specify using []

MEDIA_ROOT = BASE_DIR / 'static/images'
# directory on ur server whr user-uploaded files (such as profile pictures) will b stored
